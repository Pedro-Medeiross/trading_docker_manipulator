version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - botnet

  publisher_xofre:
    build:
      context: .
      dockerfile: Dockerfile.publisher.xofre
    container_name: telegram_publisher_xofre
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - TOKEN_TELEGRAM=${TOKEN_TELEGRAM_XOFRE}
    depends_on:
      - rabbitmq
    networks:
      - botnet

  publisher_avalon:
    build:
      context: .
      dockerfile: Dockerfile.publisher.avalon
    container_name: telegram_publisher_avalon
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - TOKEN_TELEGRAM=${TOKEN_TELEGRAM_AVALON}
    depends_on:
      - rabbitmq
    networks:
      - botnet

  publisher_polarium:
    build:
      context: .
      dockerfile: Dockerfile.publisher.polarium
    container_name: telegram_publisher_polarium
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL}
      - TOKEN_TELEGRAM=${TOKEN_TELEGRAM_POLARIUM}
    depends_on:
      - rabbitmq
    networks:
      - botnet

  message_replicator:
    build:
      context: .
      dockerfile: Dockerfile.message.replicator
    container_name: telegram_message_replicator
    volumes:
      - telethon_sessions:/app
    env_file:
      - .env.messager
    networks:
      - botnet
    stdin_open: true
    tty: true

volumes:
  rabbitmq_data:
  telethon_sessions:

networks:
  botnet:
    driver: bridge
